name: Hot News Crawler

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/crawler.yml'
      - 'config/**'
      - 'requirements.txt'
      - 'main.py'
      - 'README.md'
  schedule:
    - cron: '0,50 * * * *'   # UTC 每小时 :00 和 :50

permissions:
  contents: write

concurrency:
  group: crawler
  cancel-in-progress: true

jobs:
  crawl:
    runs-on: ubuntu-latest
    steps:
      # 用原生 git 拉取代码，避免使用 actions/checkout
      - name: Checkout repository (no marketplace action)
        run: |
          git init .
          git remote add origin https://github.com/${{ github.repository }}.git
          git fetch --no-tags --prune --depth=1 origin ${{ github.sha }}
          git checkout -qf FETCH_HEAD

      # Runner 自带 python3，无需 setup-python
      - name: Show Python
        run: |
          python3 --version
          python3 -m pip --version || python3 -m ensurepip --upgrade

      - name: Install dependencies
        run: |
          python3 -m pip install -U pip
          python3 -m pip install -r requirements.txt

      # 建议“确保存在”，别直接失败；真要强校验就改回 exit 1
      - name: Ensure config exists
        run: |
          mkdir -p config
          [ -f config/config.yaml ] || printf "sources: []\n" > config/config.yaml
          [ -f config/frequency_words.txt ] || touch config/frequency_words.txt
          echo "✅ 配置文件就绪"

      - name: Run crawler
        env:
          FEISHU_WEBHOOK_URL: ${{ secrets.FEISHU_WEBHOOK_URL }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DINGTALK_WEBHOOK_URL: ${{ secrets.DINGTALK_WEBHOOK_URL }}
          WEWORK_WEBHOOK_URL: ${{ secrets.WEWORK_WEBHOOK_URL }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER }}
          EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
          NTFY_TOPIC: ${{ secrets.NTFY_TOPIC }}
          NTFY_SERVER_URL: ${{ secrets.NTFY_SERVER_URL }}
          NTFY_TOKEN: ${{ secrets.NTFY_TOKEN }}
          GITHUB_ACTIONS: true
        run: python3 main.py

      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          git diff --quiet && git diff --staged --quiet || \
          (git commit -m "Auto update $(TZ=Asia/Shanghai date '+%F %T')" && git push)
